{"version":3,"sources":["stores/user/index.ts","stores/advertisement/index.ts","components/advertisement/placeholder.jpg","shared/constants.ts","stores/notification/store.ts","stores/notification/index.ts","stores/index.ts","components/auth-manager/index.tsx","components/form-error/index.tsx","components/notification-manager/index.tsx","components/header/index.tsx","components/create-ad-form/index.tsx","components/create-ad-modal/index.tsx","components/advertisement/index.tsx","pages/dashboard/index.tsx","pages/login/index.tsx","pages/signup/index.tsx","pages/ad-details/index.tsx","App.tsx","index.tsx","stores/user/store.ts","stores/advertisement/store.ts","services/http/index.ts","services/user/index.ts","services/advertisement/index.ts","services/index.ts"],"names":["UserStore","AdvertisementStore","module","exports","MIN_PASSWORD_LENGTH","MISSING_PET_USER_COOKIE","STORE_TOKEN","payload","this","notifications","push","type","id","nanoid","filter","n","observable","action","stores","USER_STORE_TOKEN","userStore","NOTIFICATION_STORE_TOKEN","notificationStore","ADVERTISEMENT_STORE_TOKEN","advertisementService","inject","observer","check","Boolean","success","fallback","routerProps","valid","useMemo","user","useEffect","navigate","React","cloneElement","FormError","text","split","map","reason","idx","Form","Text","className","key","Alert","variant","onClose","dismiss","dismissible","message","AppHeader","logout","props","resetUser","renderControls","isAuthorized","Navbar","Toggle","Collapse","Nav","Link","as","to","Item","onClick","collapseOnSelect","expand","bg","Brand","Component","validationSchema","yup","title","trim","transform","value","isType","startCase","required","max","reward","positive","tags","CreateAdForm","onSubmit","handleSubmit","useCallback","values","result","cast","formik","useFormik","initialValues","validateOnBlur","noValidate","Group","controlId","Label","Control","name","placeholder","isValid","touched","errors","onChange","handleChange","onBlur","handleBlur","isInvalid","Feedback","rows","Row","Col","md","xs","Button","CreateAdModal","show","onHide","Modal","size","centered","Header","closeButton","Title","Body","badges","Advertisement","imageUrl","creationDate","tagsComponents","tag","i","Badge","sample","Card","style","width","Img","src","logo","height","Date","toDateString","reactions","DashboardPage","state","showAddItemModal","toggleAddItemModal","setState","createItem","goToItem","adStore","itemsWereFetched","loadItems","disposer","mobx","isError","addNotification","forEach","dispose","userId","isLoading","ads","ad","accountId","Number","Spinner","animation","block","a","schema","userName","password","min","LoginPage","reset","resetError","isSubmitting","isSignedUp","login","errorReason","get","disabled","email","matches","firstName","lastName","phoneNumber","SignUpPage","createAccount","item","getItem","window","history","back","toLocaleDateString","account","FirstName","slice","LastName","href","PhoneNumber","App","accessToken","path","enforceActions","ReactDOM","render","document","getElementById","States","box","INITIAL","userService","UserService","undefined","runInAction","set","LOADING","SUCCESS","FAILED","authorize","Object","omit","every","computed","AdvertisementService","getItems","items","token","Cookie","getJSON","httpClient","axios","create","baseURL","headers","Authorization","_http","_user","remove","apiBody","Email","Password","ConfirmPassword","UserName","post","res","data","response","normalizedErrorMessage","flatten","ModelState","join","Error","grant_type","username","qs","stringify","storeUser","access_token","error_description","JSON","_userService","Reward","Tags","CreationDate","ImageUrl","AccountId","Account","image","adInfo","itemCreationRes"],"mappings":"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","file":"static/js/main.ccca3203.chunk.js","sourcesContent":["import { UserStore } from './store';\n\nexport * from './store';\nexport * from './types';\nexport default new UserStore();","import { AdvertisementStore } from './store';\n\nexport * from './store';\nexport * from './types';\nexport default new AdvertisementStore();","module.exports = __webpack_public_path__ + \"static/media/placeholder.bac728e3.jpg\";","export const MIN_PASSWORD_LENGTH = 8;\nexport const MISSING_PET_USER_COOKIE = \"missing_pet_user\";","import { observable, action } from \"mobx\";\nimport nanoid from \"nanoid\";\n\ntype Notification = {\n  message: string;\n  type?:\n    | \"primary\"\n    | \"secondary\"\n    | \"success\"\n    | \"danger\"\n    | \"warning\"\n    | \"info\"\n    | \"dark\"\n    | \"light\";\n};\n\nexport const STORE_TOKEN = \"NotificationStore\";\n\nexport class NotificationStore {\n  @observable notifications: Array<Notification & { id: string }> = [];\n\n  @action\n  addNotification(payload: Notification) {\n    this.notifications.push({ type: 'primary' ,...payload, id: nanoid() });\n  }\n\n  @action\n  dismiss(id: string) {\n    this.notifications = this.notifications.filter(n => n.id !== id);\n  }\n}\n","import { NotificationStore } from './store';\n\nexport * from './store';\nexport default new NotificationStore();","import userStore, { STORE_TOKEN as USER_STORE_TOKEN } from './user';\nimport notificationStore, { STORE_TOKEN as NOTIFICATION_STORE_TOKEN } from './notification';\nimport advertisementService, { STORE_TOKEN as ADVERTISEMENT_STORE_TOKEN } from './advertisement';\n\nconst stores = {\n  [USER_STORE_TOKEN]: userStore,\n  [NOTIFICATION_STORE_TOKEN]: notificationStore,\n  [ADVERTISEMENT_STORE_TOKEN]: advertisementService\n};\n\nexport default stores;","import { RouteComponentProps, navigate } from '@reach/router';\nimport { inject, observer } from 'mobx-react';\nimport React, { useEffect, useMemo } from 'react';\n\nimport { STORE_TOKEN as USER_STORE_TOKEN, User, UserStore } from '../../stores/user';\n\nexport interface Props {\n  [USER_STORE_TOKEN]?: UserStore;\n  check?: (user?: User) => boolean\n  success: React.ReactElement,\n  fallback: string,\n}\n \nconst AuthManager: React.SFC<RouteComponentProps<Props>> = ({ UserStore, check = Boolean, success, fallback, ...routerProps }) => {\n  const valid = useMemo(() => check!(UserStore!.user), [check, UserStore]);\n  useEffect(() => {\n    if (!valid && fallback && typeof fallback === 'string') {\n      navigate(fallback);\n    }\n  });\n\n  if (valid) {\n    return React.cloneElement(success!, { ...routerProps });\n  }\n\n  return null;\n}\n \nexport default inject(USER_STORE_TOKEN)(observer(AuthManager));","import React from \"react\";\nimport { Form } from \"react-bootstrap\";\n\nexport interface Props {\n  text: string;\n}\n\nconst FormError: React.SFC<Props> = ({ text }) => {\n  return text ? (\n    <>\n      {text.split(\"\\n\").map((reason: string, idx: number) => (\n        <Form.Text className=\"text-center text-md-left text-danger d-block mb-1\" key={idx}>\n          {reason}\n        </Form.Text>\n      ))}\n    </>\n  ) : null;\n};\n\nexport default FormError;\n","import { inject, observer } from \"mobx-react\";\nimport React from \"react\";\nimport Alert from \"react-bootstrap/Alert\";\n\nimport {\n  NotificationStore,\n  STORE_TOKEN as NOTIFICATION_STORE_TOKEN\n} from \"../../stores/notification\";\nimport \"./index.css\";\n\nexport interface Props {\n  [NOTIFICATION_STORE_TOKEN]?: NotificationStore;\n}\n\nconst NotificationManager: React.SFC<Props> = ({\n  [NOTIFICATION_STORE_TOKEN]: notificationStore\n}) => {\n  const notifications = notificationStore!.notifications.map(n => (\n    <Alert\n      key={n.id}\n      variant={n.type}\n      className=\"mp-notification\"\n      onClose={() => notificationStore!.dismiss(n.id)}\n      dismissible\n    >\n      {n.message}\n    </Alert>\n  ));\n\n  return <>{notifications}</>;\n};\n\nexport default inject(NOTIFICATION_STORE_TOKEN)(observer(NotificationManager));\n","import { Link, navigate } from \"@reach/router\";\nimport { inject, observer } from \"mobx-react\";\nimport React from \"react\";\nimport { Nav, Navbar } from \"react-bootstrap\";\n\nimport { STORE_TOKEN as USER_STORE_TOKEN, UserStore } from \"../../stores/user\";\n\nexport interface Props {\n  [USER_STORE_TOKEN]?: UserStore;\n}\n\n@inject(USER_STORE_TOKEN)\n@observer\nclass AppHeader extends React.Component<Props> {\n  logout = () => {\n    this.props[USER_STORE_TOKEN]!.resetUser();\n    navigate(\"/authorization\");\n  };\n\n  renderControls = () => {\n    const canNavigate = this.props[USER_STORE_TOKEN]!.isAuthorized;\n    if (!canNavigate) {\n      return null;\n    }\n\n    const user = this.props[USER_STORE_TOKEN]!.user;\n\n    return (\n      <>\n        <Navbar.Toggle />\n        <Navbar.Collapse>\n          <Nav className=\"ml-auto\">\n            <Nav.Link as={Link} to=\"/dashboard\">\n              All posts\n            </Nav.Link>\n            {user && user.id ? (\n              <Nav.Link as={Link} to={`/dashboard/${user.id}`}>\n                My posts\n              </Nav.Link>\n            ) : null}\n            <Nav.Item onClick={this.logout} className=\"nav-link\">\n              Logout\n            </Nav.Item>\n          </Nav>\n        </Navbar.Collapse>\n      </>\n    );\n  };\n\n  render() {\n    return (\n      <Navbar collapseOnSelect expand=\"lg\" bg=\"dark\" variant=\"dark\">\n        <Navbar.Brand>Missing Pet</Navbar.Brand>\n        {this.renderControls()}\n      </Navbar>\n    );\n  }\n}\n\nexport default AppHeader;\n","import React, { useCallback } from \"react\";\nimport { useFormik } from \"formik\";\nimport * as yup from \"yup\";\nimport startCase from \"lodash/startCase\";\nimport { Form, Row, Col, Button } from \"react-bootstrap\";\n\nconst validationSchema = yup.object({\n  title: yup\n    .string()\n    .trim()\n    .transform(function(value) {\n      return this.isType(value) && value !== null ? startCase(value) : value;\n    })\n    .required(),\n  text: yup\n    .string()\n    .trim()\n    .max(500)\n    .required(),\n  reward: yup\n    .number()\n    .positive()\n    .required(),\n  tags: yup.string().trim()\n});\n\ninterface Props {\n  onSubmit: (values: Record<string, any>) => any;\n  onClose?: () => void;\n}\n\nconst CreateAdForm: React.SFC<Props> = ({ onSubmit, onClose = () => {} }) => {\n  const handleSubmit = useCallback(values => {\n    const result: any = validationSchema.cast(values);\n    if (result.tags) {\n      result.tags = result.tags.split(';').filter(Boolean);\n    } else {\n      result.tags = [];\n    }\n    onSubmit(result);\n  }, [onSubmit]);\n\n  const formik = useFormik({\n    initialValues: {\n      title: \"\",\n      text: \"\",\n      reward: 0,\n      tags: \"\"\n    },\n    validationSchema,\n    validateOnBlur: true,\n    onSubmit: handleSubmit\n  });\n\n  return (\n    <Form noValidate onSubmit={formik.handleSubmit}>\n      <Form.Group controlId=\"addItemForm.title\">\n        <Form.Label>Title</Form.Label>\n        <Form.Control\n          type=\"text\"\n          name=\"title\"\n          placeholder=\"The name of the advertisement\"\n          value={formik.values.title}\n          isValid={formik.touched.title && !formik.errors.title}\n          onChange={formik.handleChange}\n          onBlur={formik.handleBlur}\n          isInvalid={formik.touched.title && !!formik.errors.title}\n        />\n        <Form.Control.Feedback type=\"invalid\">\n          {formik.errors.title}\n        </Form.Control.Feedback>\n      </Form.Group>\n      <Form.Group controlId=\"addItemForm.text\">\n        <Form.Label>Text</Form.Label>\n        <Form.Control\n          as=\"textarea\"\n          rows=\"5\"\n          name=\"text\"\n          value={formik.values.text}\n          isValid={formik.touched.text && !formik.errors.text}\n          onChange={formik.handleChange}\n          onBlur={formik.handleBlur}\n          isInvalid={formik.touched.text && !!formik.errors.text}\n        />\n        <Form.Control.Feedback type=\"invalid\">\n          {formik.errors.text}\n        </Form.Control.Feedback>\n      </Form.Group>\n      <Form.Group controlId=\"addItemForm.reward\">\n        <Form.Label>Reward</Form.Label>\n        <Form.Control\n          type=\"number\"\n          name=\"reward\"\n          value={`${formik.values.reward}`}\n          isValid={formik.touched.reward && !formik.errors.reward}\n          onChange={formik.handleChange}\n          onBlur={formik.handleBlur}\n          isInvalid={formik.touched.reward && !!formik.errors.reward}\n        />\n        <Form.Control.Feedback type=\"invalid\">\n          {formik.errors.reward}\n        </Form.Control.Feedback>\n      </Form.Group>\n      <Form.Group controlId=\"addItemForm.tags\">\n        <Form.Label>Tags</Form.Label>\n        <Form.Control\n          as=\"textarea\"\n          rows=\"5\"\n          name=\"tags\"\n          placeholder=\"tag1;tag2;tag3\"\n          value={formik.values.tags}\n          onChange={formik.handleChange}\n          onBlur={formik.handleBlur}\n          isInvalid={formik.touched.tags && !!formik.errors.tags}\n        />\n        <Form.Control.Feedback type=\"invalid\">\n          {formik.errors.tags}\n        </Form.Control.Feedback>\n        <Form.Text className=\"text-muted text-center text-md-left\">\n          Please separate your tags with semicolons\n        </Form.Text>\n      </Form.Group>\n      <Row className=\"justify-content-between align-items-center\">\n        <Col md=\"6\" xs=\"12\" className=\"mb-2 mb-sm-0\" onClick={onClose}>\n          <Button type=\"button\" variant=\"secondary\" className=\"w-100\">\n            Cancel\n          </Button>\n        </Col>\n        <Col md=\"6\" xs=\"12\" className=\"mb-2 mb-sm-0\">\n          <Button type=\"submit\" className=\"w-100\">\n            Submit\n          </Button>\n        </Col>\n      </Row>\n    </Form>\n  );\n};\n\nexport default CreateAdForm;\n","import React, { useCallback } from 'react';\nimport { Modal, ModalProps } from 'react-bootstrap';\n\nimport CreateAdForm from '../create-ad-form';\n\ninterface Props extends ModalProps {\n  onSubmit: (values: any) => any;\n}\n\nconst CreateAdModal: React.SFC<Props> = ({ show, onHide = () => {}, onSubmit }) => {\n  const handleSubmit = useCallback((values: any) => {\n    onSubmit(values);\n    onHide();\n  }, [onSubmit, onHide]);\n\n  return (\n    <Modal show={show} onHide={onHide} size=\"lg\" centered>\n      <Modal.Header closeButton>\n        <Modal.Title>Create new advertisement</Modal.Title>\n      </Modal.Header>\n      <Modal.Body>\n        {show ? <CreateAdForm onSubmit={handleSubmit} onClose={onHide} /> : null}\n      </Modal.Body>\n    </Modal>\n  );\n};\n\nexport default CreateAdModal;\n","import React, { useMemo } from \"react\";\nimport { Card, Button, Badge } from \"react-bootstrap\";\nimport sample from \"lodash/sample\";\n\nimport logo from \"./placeholder.jpg\";\nimport \"./index.css\";\n\nexport interface Props {\n  title: string;\n  text: string;\n  reward: number;\n  tags: string[];\n  creationDate: string;\n  imageUrl?: string;\n  onClick: (...args: any[]) => void;\n}\n\nexport const badges = [\n  \"primary\",\n  \"secondary\",\n  \"success\",\n  \"danger\",\n  \"warning\",\n  \"info\",\n  \"light\",\n  \"dark\"\n];\n\nconst Advertisement: React.SFC<Props> = ({\n  title,\n  text,\n  reward,\n  tags,\n  imageUrl,\n  creationDate,\n  onClick\n}) => {\n  const tagsComponents = useMemo(\n    () =>\n      (tags || []).map((tag, i) => (\n        <Badge variant={sample(badges) as any} key={i} className=\"mr-1 mb-1\">\n          {tag}\n        </Badge>\n      )),\n    [tags]\n  );\n\n  return (\n    <Card style={{ width: \"18rem\" }} className=\"mb-3 mr-3\">\n      <Card.Img\n        variant=\"top\"\n        src={imageUrl || logo}\n        style={{ height: \"18rem\" }}\n      />\n      <div className=\"p-2\">\n        <Card.Title className=\"mb-1 mr-2\">{title}</Card.Title>\n        <div className=\"d-flex flex-wrap\">{tagsComponents}</div>\n        <Card.Text className=\"mt-2 ad__text\">{text}</Card.Text>\n        <div className=\"mb-2\">\n          <div>\n            <strong>Reward:</strong> {reward}\n          </div>\n          <div>\n            <strong>Posted at:</strong> {new Date(creationDate).toDateString()}\n          </div>\n        </div>\n        <Button variant=\"primary\" className=\"w-100\" onClick={onClick}>\n          See details\n        </Button>\n      </div>\n    </Card>\n  );\n};\n\nexport default Advertisement;\n","\nimport { RouteComponentProps, navigate } from \"@reach/router\";\nimport { inject, observer } from \"mobx-react\";\nimport React, { Component } from \"react\";\nimport { Spinner, Button } from \"react-bootstrap\";\nimport * as mobx from \"mobx\";\n\nimport Advertisement from \"../../components/advertisement\";\nimport {\n  AdvertisementStore,\n  STORE_TOKEN as ADVERTISEMENT_STORE_TOKEN\n} from \"../../stores/advertisement\";\nimport {\n  NotificationStore,\n  STORE_TOKEN as NOTIFICATION_STORE_TOKEN\n} from \"../../stores/notification\";\nimport { CreateAdModal } from \"../../components\";\nimport { AdvertisementPayload } from \"../../services/advertisement/types\";\nimport \"./index.css\";\n\ninterface Props {\n  [ADVERTISEMENT_STORE_TOKEN]: AdvertisementStore;\n  [NOTIFICATION_STORE_TOKEN]: NotificationStore;\n  userId?: number;\n}\n\ninterface State {\n  showAddItemModal: boolean;\n}\n\nconst reactions: mobx.IReactionDisposer[] = [];\n\n@inject(ADVERTISEMENT_STORE_TOKEN, NOTIFICATION_STORE_TOKEN)\n@observer\nclass DashboardPage extends Component<RouteComponentProps<Props>, State> {\n  state = {\n    showAddItemModal: false\n  };\n\n  componentDidMount() {\n    const adStore = this.props[ADVERTISEMENT_STORE_TOKEN];\n    const notificationStore = this.props[NOTIFICATION_STORE_TOKEN];\n    if (!adStore!.itemsWereFetched) {\n      adStore!.loadItems();\n    };\n\n    const disposer = mobx.reaction(\n      () => adStore!.isError,\n      () => {\n        notificationStore!.addNotification({\n          message: \"Failed to load advertisements, please try again later\",\n          type: \"danger\"\n        });\n      }\n    );\n    reactions.push(disposer);\n  }\n\n  componentWillUnmount() {\n    reactions.forEach(dispose => dispose());\n  }\n\n  toggleAddItemModal = () => {\n    this.setState({\n      showAddItemModal: !this.state.showAddItemModal\n    });\n  };\n\n  createItem = (values: AdvertisementPayload) => {\n    this.props[ADVERTISEMENT_STORE_TOKEN]!.createItem(values);\n  };\n\n  goToItem = (idx: number) => {\n    navigate(`/dashboard/ads/${idx}`);\n  }\n\n  render() {\n    const { [ADVERTISEMENT_STORE_TOKEN]: adStore, userId } = this.props;\n    const isLoading = adStore!.isLoading;\n    const isError = adStore!.isError;\n    const { showAddItemModal } = this.state;\n    let ads = adStore!.ads;\n\n    if (userId) {\n      ads = ads.filter(ad => ad.accountId === Number(userId));\n    }\n\n    if (isLoading) {\n      return (\n        <div className=\"w-100 h-100 d-flex justify-content-center align-items-center\">\n          <Spinner animation=\"border\" className=\"dashboard-spinner\" />\n        </div>\n      );\n    }\n\n    if (isError) {\n      return <h1>Oh-oh :(</h1>;\n    }\n\n    return (\n      <>\n        <div className=\"dashboard__add-item pb-0 p-md-2\">\n          <Button\n            variant=\"dark\"\n            size=\"lg\"\n            block\n            onClick={this.toggleAddItemModal}\n          >\n            + Create new advertisement\n          </Button>\n        </div>\n        <div className=\"d-flex flex-wrap justify-content-around\">\n          {ads.map((a, i) => (\n            <Advertisement\n              key={i}\n              title={a.title}\n              text={a.text}\n              reward={a.reward}\n              tags={a.tags}\n              imageUrl={a.imageUrl}\n              creationDate={a.creationDate}\n              onClick={() => this.goToItem(i)}\n            />\n          ))}\n        </div>\n        <CreateAdModal\n          show={showAddItemModal}\n          onHide={this.toggleAddItemModal}\n          onSubmit={this.createItem}\n        />\n      </>\n    );\n  }\n}\n\nexport default DashboardPage;\n","import { Link, navigate } from \"@reach/router\";\nimport { Formik } from \"formik\";\nimport { inject, observer } from \"mobx-react\";\nimport * as mobx from \"mobx\";\nimport React, { Component } from \"react\";\nimport { Button, Col, Form, Row, Spinner } from \"react-bootstrap\";\nimport * as yup from \"yup\";\n\nimport { FormError } from \"../../components\";\nimport { MIN_PASSWORD_LENGTH } from \"../../shared/constants\";\nimport { STORE_TOKEN as USER_STORE_TOKEN, UserStore } from \"../../stores/user\";\nimport { STORE_TOKEN as ADVERTISEMENT_STORE_TOKEN, AdvertisementStore } from \"../../stores/advertisement\";\n\ntype Props = {\n  [USER_STORE_TOKEN]?: UserStore;\n  [ADVERTISEMENT_STORE_TOKEN]?: AdvertisementStore\n};\n\nconst schema = yup.object({\n  userName: yup\n    .string()\n    .required(\"This field is required\")\n    .trim(),\n  password: yup\n    .string()\n    .required()\n    .min(MIN_PASSWORD_LENGTH)\n});\n\nconst reactions: mobx.IReactionDisposer[] = [];\n\n@inject(USER_STORE_TOKEN)\n@observer\nclass LoginPage extends Component<Props> {\n  componentDidMount() {\n    const userStore = this.props[USER_STORE_TOKEN]!;\n    const adStore = this.props[ADVERTISEMENT_STORE_TOKEN];\n    adStore!.reset();\n\n    const disposer = mobx.reaction(\n      () => userStore.isAuthorized,\n      () => {\n        navigate(\"/dashboard\");\n      }\n    );\n\n    reactions.push(disposer);\n  }\n\n  componentWillUnmount() {\n    this.props[USER_STORE_TOKEN]!.resetError();\n    reactions.forEach(dispose => dispose);\n  }\n\n  render() {\n    const userStore = this.props[USER_STORE_TOKEN];\n    const isSubmitting = userStore!.isLoading;\n    const userName = userStore!.isSignedUp ? userStore!.user!.userName : \"\";\n    const password = userStore!.isSignedUp ? userStore!.user!.password : \"\";\n\n    return (\n      <div className=\"mx-auto form-container d-flex flex-column justify-content-center h-100\">\n        <div className=\"form-container__form p-3 rounded\">\n          <h2>Log in</h2>\n          <span className=\"mb-2 mb-md-4 d-block text-muted\">\n            Please authorize to have full access to the web site.\n          </span>\n          <Formik\n            initialValues={{ userName, password }}\n            validationSchema={schema}\n            onSubmit={values => userStore!.login(values)}\n            validateOnBlur={true}\n          >\n            {({\n              values,\n              errors,\n              touched,\n              handleSubmit,\n              handleChange,\n              handleBlur\n            }) => (\n              <Form noValidate onSubmit={handleSubmit}>\n                <Form.Group controlId=\"userName\">\n                  <Form.Label>Username</Form.Label>\n                  <Form.Control\n                    type=\"text\"\n                    name=\"userName\"\n                    placeholder=\"Username\"\n                    value={values.userName}\n                    isValid={touched.userName && !errors.userName}\n                    onChange={handleChange}\n                    onBlur={handleBlur}\n                    isInvalid={touched.userName && !!errors.userName}\n                  />\n                  <Form.Control.Feedback type=\"invalid\">\n                    {errors.userName}\n                  </Form.Control.Feedback>\n                </Form.Group>\n                <Form.Group controlId=\"formBasicPassword\">\n                  <Form.Label>Password</Form.Label>\n                  <Form.Control\n                    type=\"password\"\n                    placeholder=\"Password\"\n                    name=\"password\"\n                    value={values.password}\n                    isValid={touched.password && !errors.password}\n                    onChange={handleChange}\n                    onBlur={handleBlur}\n                    isInvalid={touched.password && !!errors.password}\n                  />\n                  <Form.Control.Feedback type=\"invalid\">\n                    {errors.password}\n                  </Form.Control.Feedback>\n                </Form.Group>\n                <FormError text={userStore!.errorReason.get() || \"\"} />\n                <Row className=\"justify-content-between align-items-center\">\n                  <Col md=\"6\" xs=\"12\" className=\"mb-2 mb-sm-0 \">\n                    <Button\n                      type=\"submit\"\n                      className=\"w-100\"\n                      disabled={isSubmitting}\n                    >\n                      {isSubmitting ? <Spinner animation=\"border\" /> : \"Log in\"}\n                    </Button>\n                  </Col>\n                  <Col md=\"6\" xs=\"12\" className=\"text-center text-md-left\">\n                    <span className=\"d-block w-100\">\n                      Do not have an account?{\" \"}\n                      <Link to=\"/\">Create one here.</Link>\n                    </span>\n                  </Col>\n                </Row>\n              </Form>\n            )}\n          </Formik>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default LoginPage;\n","import { Link, navigate } from \"@reach/router\";\nimport { Formik } from \"formik\";\nimport * as mobx from \"mobx\";\nimport { inject, observer } from \"mobx-react\";\nimport React, { Component } from \"react\";\nimport { Button, Col, Form, Row, Spinner } from \"react-bootstrap\";\nimport * as yup from \"yup\";\n\nimport { FormError } from \"../../components\";\nimport { MIN_PASSWORD_LENGTH } from \"../../shared/constants\";\nimport { STORE_TOKEN as USER_STORE_TOKEN, UserStore } from \"../../stores/user\";\nimport {\n  STORE_TOKEN as NOTIFICATION_STORE_TOKEN,\n  NotificationStore\n} from \"../../stores/notification\";\nimport { STORE_TOKEN as ADVERTISEMENT_STORE_TOKEN, AdvertisementStore } from \"../../stores/advertisement\";\n\ntype Props = {\n  [USER_STORE_TOKEN]?: UserStore;\n  [NOTIFICATION_STORE_TOKEN]?: NotificationStore;\n  [ADVERTISEMENT_STORE_TOKEN]?: AdvertisementStore\n};\n\nconst phoneRegExp = /^[+]*[(]{0,1}[0-9]{1,4}[)]{0,1}[-\\s\\./0-9]*$/;\nconst emailRegExp = /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i;\n\nconst schema = yup.object({\n  email: yup\n    .string()\n    .required(\"This field is required\")\n    .trim()\n    .matches(emailRegExp, \"The provided string is not an email\"),\n  password: yup\n    .string()\n    .required(\"This field is required\")\n    .trim()\n    .min(MIN_PASSWORD_LENGTH),\n  firstName: yup\n    .string()\n    .required(\"This field is required\")\n    .trim(),\n  lastName: yup\n    .string()\n    .required(\"This field is required\")\n    .trim(),\n  phoneNumber: yup\n    .string()\n    .required(\"This field is required\")\n    .trim()\n    .matches(phoneRegExp, \"Phone number is not valid\"),\n  userName: yup\n    .string()\n    .required(\"This field is required\")\n    .trim()\n});\n\nconst reactions: mobx.IReactionDisposer[] = [];\n\n@inject(USER_STORE_TOKEN, NOTIFICATION_STORE_TOKEN)\n@observer\nclass SignUpPage extends Component<Props> {\n  componentDidMount() {\n    const userStore = this.props[USER_STORE_TOKEN];\n    const notificationStore = this.props[NOTIFICATION_STORE_TOKEN];\n    const adStore = this.props[ADVERTISEMENT_STORE_TOKEN];\n\n    adStore!.reset();\n\n    const disposer = mobx.reaction(\n      () => userStore!.isSignedUp,\n      () => {\n        notificationStore!.addNotification({\n          message: \"Account was created, please log in to proceed\",\n          type: \"success\"\n        });\n        navigate(\"authorization\");\n      }\n    );\n    reactions.push(disposer);\n  }\n\n  componentWillUnmount() {\n    this.props[USER_STORE_TOKEN]!.resetError();\n    reactions.forEach(dispose => dispose);\n  }\n\n  render() {\n    const userStore = this.props[USER_STORE_TOKEN];\n    const isSubmitting = userStore!.isLoading;\n\n    return (\n      <div className=\"mx-auto form-container d-flex flex-column justify-content-center h-100\">\n        <div className=\"form-container__form p-3 rounded\">\n          <h2>Sign Up</h2>\n          <span className=\"mb-2 mb-md-4 d-block text-muted\">\n            Please create an account to have full access to the web site.\n          </span>\n          <Formik\n            initialValues={{\n              email: \"\",\n              password: \"\",\n              firstName: \"\",\n              lastName: \"\",\n              phoneNumber: \"\",\n              userName: \"\"\n            }}\n            validationSchema={schema}\n            onSubmit={values => userStore!.createAccount(values)}\n            validateOnBlur={true}\n          >\n            {({\n              values,\n              errors,\n              touched,\n              handleSubmit,\n              handleChange,\n              handleBlur\n            }) => (\n              <Form noValidate onSubmit={handleSubmit}>\n                <Form.Row>\n                  <Form.Group as={Col} md=\"6\" controlId=\"firstName\">\n                    <Form.Label>First name</Form.Label>\n                    <Form.Control\n                      type=\"text\"\n                      name=\"firstName\"\n                      value={values.firstName}\n                      onChange={handleChange}\n                      onBlur={handleBlur}\n                      isValid={touched.firstName && !errors.firstName}\n                      isInvalid={touched.firstName && !!errors.firstName}\n                      placeholder=\"John\"\n                    />\n                    <Form.Control.Feedback type=\"invalid\">\n                      {errors.firstName}\n                    </Form.Control.Feedback>\n                  </Form.Group>\n                  <Form.Group as={Col} md=\"6\" controlId=\"lastName\">\n                    <Form.Label>Last name</Form.Label>\n                    <Form.Control\n                      type=\"text\"\n                      name=\"lastName\"\n                      value={values.lastName}\n                      onChange={handleChange}\n                      onBlur={handleBlur}\n                      isValid={touched.lastName && !errors.lastName}\n                      isInvalid={touched.lastName && !!errors.lastName}\n                      placeholder=\"Doe\"\n                    />\n                    <Form.Control.Feedback type=\"invalid\">\n                      {errors.lastName}\n                    </Form.Control.Feedback>\n                  </Form.Group>\n                </Form.Row>\n                <Form.Row>\n                  <Form.Group as={Col} md=\"6\" controlId=\"userName\">\n                    <Form.Label>Username</Form.Label>\n                    <Form.Control\n                      type=\"text\"\n                      name=\"userName\"\n                      value={values.userName}\n                      onChange={handleChange}\n                      onBlur={handleBlur}\n                      isValid={touched.userName && !errors.userName}\n                      isInvalid={touched.userName && !!errors.userName}\n                      placeholder=\"johndoe\"\n                    />\n                    <Form.Control.Feedback type=\"invalid\">\n                      {errors.userName}\n                    </Form.Control.Feedback>\n                  </Form.Group>\n                  <Form.Group as={Col} md=\"6\" controlId=\"phoneNumber\">\n                    <Form.Label>Phone number</Form.Label>\n                    <Form.Control\n                      type=\"phone\"\n                      name=\"phoneNumber\"\n                      placeholder=\"+380*********\"\n                      value={values.phoneNumber}\n                      isValid={touched.phoneNumber && !errors.phoneNumber}\n                      onChange={handleChange}\n                      onBlur={handleBlur}\n                      isInvalid={touched.phoneNumber && !!errors.phoneNumber}\n                    />\n                    <Form.Control.Feedback type=\"invalid\">\n                      {errors.phoneNumber}\n                    </Form.Control.Feedback>\n                  </Form.Group>\n                </Form.Row>\n                <Form.Row>\n                  <Form.Group as={Col} md=\"6\" controlId=\"email\">\n                    <Form.Label>Email</Form.Label>\n                    <Form.Control\n                      type=\"text\"\n                      name=\"email\"\n                      placeholder=\"john@doe.com\"\n                      value={values.email}\n                      isValid={touched.email && !errors.email}\n                      onChange={handleChange}\n                      onBlur={handleBlur}\n                      isInvalid={touched.email && !!errors.email}\n                    />\n                    <Form.Control.Feedback type=\"invalid\">\n                      {errors.email}\n                    </Form.Control.Feedback>\n                  </Form.Group>\n                  <Form.Group as={Col} md=\"6\" controlId=\"password\">\n                    <Form.Label>Password</Form.Label>\n                    <Form.Control\n                      type=\"password\"\n                      placeholder=\"Password\"\n                      name=\"password\"\n                      value={values.password}\n                      isValid={touched.password && !errors.password}\n                      onChange={handleChange}\n                      onBlur={handleBlur}\n                      isInvalid={touched.password && !!errors.password}\n                    />\n                    <Form.Control.Feedback type=\"invalid\">\n                      {errors.password}\n                    </Form.Control.Feedback>\n                  </Form.Group>\n                </Form.Row>\n                <FormError text={userStore!.errorReason.get() || \"\"} />\n                <Row className=\"justify-content-between align-items-center\">\n                  <Col md=\"6\" xs=\"12\" className=\"mb-2 mb-sm-0 \">\n                    <Button\n                      type=\"submit\"\n                      className=\"w-100\"\n                      disabled={isSubmitting}\n                    >\n                      {isSubmitting ? <Spinner animation=\"border\" /> : \"Submit\"}\n                    </Button>\n                  </Col>\n                  <Col md=\"6\" xs=\"12\" className=\"text-center text-md-left\">\n                    <span className=\"d-block w-100\">\n                      Already have an account? Click{\" \"}\n                      <Link to=\"authorization\">here</Link> to log in.\n                    </span>\n                  </Col>\n                </Row>\n                <Form.Text className=\"text-muted text-center text-md-left\">\n                  We'll never share your data with anyone else.\n                </Form.Text>\n              </Form>\n            )}\n          </Formik>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default SignUpPage;\n","import sample from \"lodash/sample\";\nimport { inject, observer } from \"mobx-react\";\nimport React, { useEffect, useMemo } from \"react\";\nimport { Badge, Card, Col, Row, Button } from \"react-bootstrap\";\n\nimport { badges } from \"../../components/advertisement\";\nimport {\n  AdvertisementStore,\n  STORE_TOKEN as ADVERTISEMENT_STORE_TOKEN\n} from \"../../stores/advertisement\";\nimport \"./index.css\";\n\nexport interface Props {\n  idx?: string;\n  [ADVERTISEMENT_STORE_TOKEN]?: AdvertisementStore;\n}\n\nconst AdDetailsPage: React.SFC<Props> = ({\n  idx,\n  [ADVERTISEMENT_STORE_TOKEN]: adStore\n}) => {\n  useEffect(() => {\n    if (!adStore!.itemsWereFetched) {\n      adStore!.loadItems();\n    }\n  }, [adStore]);\n\n  const item = useMemo(() => adStore!.getItem(Number(idx)), [\n    idx,\n    adStore!.ads,\n    adStore\n  ]);\n  const isLoading = adStore!.isLoading;\n  const tagsComponents = useMemo(\n    () =>\n      ((item && item.tags) || []).map((tag, i) => (\n        <Badge variant={sample(badges) as any} key={i} className=\"mr-1 mb-1\">\n          {tag}\n        </Badge>\n      )),\n    [item]\n  );\n\n  if (isLoading) {\n    return <h1>Loading...</h1>;\n  }\n\n  if (!item) {\n    return <h1>404 | Item not found</h1>;\n  }\n\n  return (\n    <div>\n      <Button variant=\"link\" className=\"p-0\" onClick={() => window.history.back()}>Go Back</Button>\n      <h1 className=\"border-bottom my-4\">{item.title}</h1>\n      <Row\n        as={Card}\n        className=\"ad-details__content flex-row p-2 mx-auto mx-md-0\"\n      >\n        <Col md=\"8\" xs=\"12\" className=\"border-bottom\">\n          <Card className=\"mb-2\" bg=\"light\">\n            <Card.Header className=\"px-2\">\n              <strong>Description</strong>\n            </Card.Header>\n            <Card.Body className=\"p-2\">\n              <p>{item.text}</p>\n              <small className=\"text-muted\">Created on: {new Date(item.creationDate).toLocaleDateString()}</small>\n            </Card.Body>\n          </Card>\n          Tags: {tagsComponents}\n        </Col>\n        <Col md=\"4\" xs=\"12\">\n          <strong className=\"d-block mb-1 mt-3 mt-md-0\">Details:</strong>\n          <ul className=\"list-unstyled mt-1 mt-md-0\">\n            <li className=\"d-flex align-items-center justify-content-between\">\n              <span>Reward</span>\n              <span className=\"font-weight-bold\">{item.reward}</span>\n            </li>\n            <li className=\"d-flex align-items-center justify-content-between\">\n              <span>Author</span>\n              <span className=\"font-weight-bold\">{`${item.account.FirstName.slice(0, 1)}. ${item.account.LastName}`}</span>\n            </li>\n            <li className=\"d-flex align-items-center justify-content-between\">\n              <span>Phone</span>\n              <span className=\"font-weight-bold\">\n                <a href={`tel:${item.account.PhoneNumber}`}>{item.account.PhoneNumber}</a>\n              </span>\n            </li>\n          </ul>\n        </Col>\n      </Row>\n    </div>\n  );\n};\n\nexport default inject(ADVERTISEMENT_STORE_TOKEN)(observer(AdDetailsPage));\n","import { Router } from \"@reach/router\";\nimport React from \"react\";\n\nimport { AuthManager, NotificationManager, AppHeader } from \"./components\";\nimport DashboardPage from \"./pages/dashboard\";\nimport LoginPage from \"./pages/login\";\nimport SignUpPage from \"./pages/signup\";\nimport \"./App.css\";\nimport AdDetailsPage from \"./pages/ad-details\";\n\nconst App: React.FC = () => {\n  return (\n    <div className=\"app\">\n      <NotificationManager />\n      <AppHeader />\n      <Router className=\"app__content container-fluid py-3\">\n        <AuthManager\n          check={user => !user || !user.accessToken}\n          success={<SignUpPage />}\n          fallback=\"/dashboard\"\n          path=\"/\"\n        />\n        <AuthManager\n          check={user => !user || !user.accessToken}\n          success={<LoginPage />}\n          fallback=\"/dashboard\"\n          path=\"/authorization\"\n        />\n        <AuthManager\n          check={user => !!user && !!user.accessToken}\n          success={<DashboardPage />}\n          fallback=\"/authorization\"\n          path=\"/dashboard\"\n        />\n        <AuthManager\n          check={user => !!user && !!user.accessToken}\n          success={<AdDetailsPage />}\n          fallback=\"/authorization\"\n          path=\"/dashboard/ads/:idx\"\n        />\n        <AuthManager\n          check={user => !!user && !!user.accessToken}\n          success={<DashboardPage />}\n          fallback=\"/authorization\"\n          path=\"/dashboard/:userId\"\n        />\n      </Router>\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport * as mobx from 'mobx';\nimport { Provider } from 'mobx-react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nimport stores from './stores';\nimport App from './App';\n\nmobx.configure({ enforceActions: \"observed\" });\n\nReactDOM.render(\n  <Provider {...stores}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n","import { observable, action, runInAction, computed, IObservableValue } from \"mobx\";\nimport omit from \"lodash/omit\";\n\nimport { User } from \"./types\";\nimport { UserService, UserServiceType } from \"../../services\";\nimport { Account } from \"../../services/user/types\";\n\nexport const STORE_TOKEN = \"UserStore\";\n\nexport enum States {\n  INITIAL,\n  LOADING,\n  FAILED,\n  SUCCESS\n}\n\nexport class UserStore {\n  @observable user?: User;\n  state: IObservableValue<States> = observable.box(States.INITIAL);\n  errorReason: IObservableValue<string> = observable.box(\"\");\n\n  private readonly userService: UserServiceType = UserService;\n\n  constructor() {\n    this.user = this.userService.user || undefined;\n  }\n\n  @computed\n  get isLoading() {\n    return this.state.get() === States.LOADING;\n  }\n\n  @computed\n  get isSignedUp() {\n    if (!this.user) {\n      return false;\n    }\n\n    return (\n      !this.user.accessToken &&\n      Object.values(omit(this.user, \"accessToken\")).every(Boolean)\n    );\n  }\n\n  @computed\n  get isAuthorized() {\n    return Boolean(this.user) && Boolean(this.user!.accessToken);\n  }\n\n  @action\n  async createAccount(payload: Account) {\n    try {\n      runInAction(() => {\n        this.state.set(States.LOADING);\n        this.errorReason.set(\"\");\n      });\n      const user = await this.userService.createAccount(payload);\n      runInAction(() => {\n        this.user = user;\n        this.state.set(States.SUCCESS);\n      });\n    } catch (e) {\n      runInAction(() => {\n        this.state.set(States.FAILED);\n        this.errorReason.set(e.message);\n      });\n    }\n  }\n\n  @action\n  async login(payload: Pick<Account, \"userName\" | \"password\">) {\n    try {\n      runInAction(() => {\n        this.state.set(States.LOADING);\n        this.errorReason.set(\"\");\n      });\n      const accessToken = await this.userService.authorize(payload);\n      runInAction(() => {\n        this.user = this.user || ({} as User);\n        this.user!.accessToken = accessToken;\n        this.state.set(States.SUCCESS);\n      });\n    } catch (e) {\n      runInAction(() => {\n        this.state.set(States.FAILED);\n        this.errorReason.set(e.message);\n      });\n    }\n  }\n\n  @action\n  resetUser() {\n    this.user = undefined;\n    this.userService.reset();\n  }\n\n  @action\n  resetError() {\n    this.errorReason.set(\"\");\n  }\n}\n","import { observable, runInAction, action, IObservableValue, computed } from \"mobx\";\n\nimport { Advertisement } from './types';\nimport { AdvertisementService, AdvertisementServiceType } from \"../../services\";\nimport { AdvertisementPayload } from \"../../services/advertisement/types\";\n\nexport enum States {\n  INITIAL,\n  LOADING,\n  FAILED,\n  SUCCESS\n}\n\nexport const STORE_TOKEN = 'AdvertisementStore';\n\nexport class AdvertisementStore {\n  @observable ads: Advertisement[] = [];\n  state: IObservableValue<States> = observable.box(States.INITIAL);\n\n  private readonly advertisementService: AdvertisementServiceType = AdvertisementService;\n\n  @computed\n  get isLoading() {\n    return this.state.get() === States.LOADING;\n  }\n\n  @computed\n  get isError() {\n    return this.state.get() === States.FAILED;\n  }\n\n  @computed\n  get itemsWereFetched() {\n    return this.state.get() === States.SUCCESS;\n  }\n\n  getItem(idx: number) {\n    const wrapper = computed(() => {\n      const value = this.ads[idx];\n      return value;\n    });\n    return wrapper.get();\n  }\n\n  @action\n  async loadItems() {\n    try {\n      runInAction(() => this.state.set(States.LOADING));\n      const items = await this.advertisementService.getItems();\n      runInAction(() => {\n        this.ads = items;\n        this.state.set(States.SUCCESS);\n      });\n    } catch (e) {\n      runInAction(() => this.state.set(States.FAILED));\n    }\n  }\n\n  @action\n  async createItem(payload: AdvertisementPayload) {\n    try {\n      runInAction(() => this.state.set(States.LOADING));\n      await this.advertisementService.createItem(payload);\n      runInAction(() => this.loadItems());\n    } catch (e) {\n      runInAction(() => this.state.set(States.FAILED));\n    }\n  }\n\n  @action\n  reset () {\n    this.ads = [];\n    this.state.set(States.INITIAL);\n  }\n}","import axios from \"axios\";\nimport Cookie from \"js-cookie\";\n\nimport { MISSING_PET_USER_COOKIE } from \"../../shared/constants\";\n\nconst tempToken = 'eDuWLvY9mgVULy-UER-CWg_v5KoT59mQHO6SXdswKrP5ulv7vYvGRzjADPs4AvSKMBF2Go2KlkM9aqHromV9PAwqRbKSzbrW7PBs-jm_8GzJmhY6V4oO2etGwI0L4StliQzWnKvN2MTfhi5fANrPo2xogpCsly9fTPry2mWGFRxJFl-bThUBzCjwZsAhYYT-r7hXrURN-UBKVzwsz3Ii3tz6-OV2yrEwJ0F78svCwoO3t7ub05EE7oA--NxbiEQZ-kiGMjBxcaiHK63tZBU7tiDBROZsrmPvIKYojuMliwRR9tumEH-rRYnx0hmk6bPbmjG_0G0duLIGfswVZqPcj-BPGk-_5mqhlDePt65eNqxjXpZ8GFOWKB05wuAa-rH7ojo8gB0HsDZQxqFfa0Z94WrL7eHqQo4_G1iCK36aPpsebhiBp4uONJL8fuXxyltZQ-ck09SiVq8YXaEQ7ZRvsEY2SIQ2R4nDObB6zwM-Y9o';\nconst user = Cookie.getJSON(MISSING_PET_USER_COOKIE);\nconst token = tempToken || (user && user.accessToken) || undefined;\n\nexport const httpClient = axios.create({\n  baseURL: \"https://missing-pet.azurewebsites.net\",\n  headers: {\n    Authorization: token ? `Bearer ${token}` : undefined\n  }\n});","import { AxiosInstance, AxiosError } from \"axios\";\nimport Cookie from \"js-cookie\";\nimport flatten from \"lodash/flatten\";\nimport qs from \"querystring\";\n\nimport { User } from \"../../stores/user\";\nimport { httpClient } from \"../http\";\nimport { Account } from \"./types\";\nimport { MISSING_PET_USER_COOKIE } from \"../../shared/constants\";\n\nexport class UserService {\n  private readonly _http: AxiosInstance = httpClient;\n  private _user?: User;\n\n  constructor() {\n    this._user = Cookie.getJSON(MISSING_PET_USER_COOKIE);\n  }\n\n  get user() {\n    return this._user;\n  }\n\n  reset() {\n    Cookie.remove(MISSING_PET_USER_COOKIE);\n    this._user = undefined;\n  }\n\n  async createAccount(payload: Account) {\n    try {\n      const apiBody = {\n        Email: payload.email,\n        Password: payload.password,\n        ConfirmPassword: payload.password,\n        FirstName: payload.firstName,\n        UserName: payload.userName,\n        LastName: payload.lastName,\n        PhoneNumber: payload.phoneNumber\n      };\n      const res = await this._http.post<number>(\"/api/account\", apiBody);\n      this._user = { ...payload, id: res.data };\n      return this._user;\n    } catch (e) {\n      const res = (e as AxiosError).response;\n      const normalizedErrorMessage = res\n        ? flatten(Object.values(res.data.ModelState)).join(\"\\n\")\n        : \"Something went wrong, please try again later\";\n      throw new Error(normalizedErrorMessage);\n    }\n  }\n\n  async authorize(payload: Pick<Account, \"userName\" | \"password\">) {\n    try {\n      const apiBody = {\n        grant_type: \"password\",\n        username: payload.userName,\n        password: payload.password\n      };\n      const res = await this._http.post<{\n        access_token: string;\n        userName: string;\n        id: string;\n      }>(\"/token\", qs.stringify(apiBody), {\n        headers: {\n          \"Content-Type\": \"application/x-www-form-urlencoded\"\n        }\n      });\n      this.storeUser(res.data);\n\n      return res.data.access_token;\n    } catch (e) {\n      const res = (e as AxiosError).response;\n      const normalizedErrorMessage =\n        (res && res.data && res.data.error_description) ||\n        \"Something went wrong, please try again later\";\n      throw new Error(normalizedErrorMessage);\n    }\n  }\n\n  private storeUser(data: { access_token: string; userName: string, id: string }) {\n    const user = this._user || ({} as Partial<User>);\n    user.accessToken = data.access_token;\n    user.userName = user.userName || data.userName;\n    user.id = user.id || Number(data.id);\n    Cookie.set(MISSING_PET_USER_COOKIE, JSON.stringify(user));\n  }\n}\n\nexport default new UserService();\n","import { AxiosInstance } from \"axios\";\nimport { httpClient } from \"../http\";\n\nimport { RawAdvertisement, AdvertisementPayload } from \"./types\";\nimport { Advertisement } from \"../../stores/advertisement/types\";\nimport userService, { UserService } from \"../user\";\n\nexport class AdvertisementService {\n  private readonly _http: AxiosInstance = httpClient;\n  private readonly _userService: UserService = userService;\n\n  async getItems(): Promise<Advertisement[]> {\n    const res = await this._http.get<RawAdvertisement[]>('/api/adverts?IsDesc=true&ByCreationDate=true');\n    return (res.data || []).map((a: RawAdvertisement) => ({\n      title: a.Title,\n      text: a.Text,\n      reward: a.Reward,\n      tags: a.Tags,\n      creationDate: a.CreationDate,\n      imageUrl: a.ImageUrl,\n      accountId: a.AccountId,\n      account: a.Account\n    }));\n  }\n\n  async createItem(payload: AdvertisementPayload): Promise<void> {\n    const { image, ...adInfo } = payload;\n    const itemCreationRes = await this._http.post<number>('/api/adverts', {\n      Title: adInfo.title,\n      Text: adInfo.text,\n      Reward: adInfo.reward,\n      AccountId: this._userService.user!.id!,\n      Tags: adInfo.tags\n    });\n    const adId = itemCreationRes.data;\n    if (image) {\n      // TODO: implement image upload\n    }\n  }\n}\n\nexport default new AdvertisementService();","export * from \"./http\";\nexport { default as UserService, UserService as UserServiceType } from \"./user\";\nexport {\n  default as AdvertisementService,\n  AdvertisementService as AdvertisementServiceType\n} from \"./advertisement\";\n"],"sourceRoot":""}